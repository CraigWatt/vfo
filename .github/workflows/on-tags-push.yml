name: 👷📦 Generate release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  linux-build:
    name: 👷 Build files for packaging
    runs-on: macos-latest

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3.3.0

      - name: 🏗️ Build application
        run: make

      - name: 💭 Cache application
        uses: actions/cache@v3.2.2
        id: vfo-build
        with:
          path: |
            ./bin/vfo
            ./src/vfo_config.conf
          key: ${{ github.sha }}

  apple-pkg:
    name: 👷 Setup macOS .pkg
    runs-on: macos-latest
    timeout-minutes: 5 # Keeps your builds from running too long
    needs: [linux-build]
    
    steps:
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v3.3.0

    - name: ❓Is brew installed
      run: brew -v
      
    - name: 🔨 Install xmlstarlet
      run: brew install xmlstarlet
      
    - name: ❓Is xmlstarlet installed
      run: xmlstarlet --version
      
    - name: 🔨 Install python
      run: brew install python
      
    - name: ❓ Is python installed
      run: python -v

    - name: 🤌💭 Fetch application cache
      uses: actions/cache@v3.2.2
      id: vfo-build
      with:
        path: |
            ./bin/vfo
            ./src/vfo_config.conf
        key: ${{ github.sha }}

    - name: ✍️ ReWrite version string in build-info.plist from tag
      run: |
        xmlstarlet ed --inplace -u "/plist/dict/string[@id=9]" -v $GITHUB_REF_NAME munki-pkg-workspace/build-info.plist

    - name: 🫳 Position application to payload
      run: |
        cp bin/vfo munki-pkg-workspace/payload
        cp src/vfo_config.conf munki-pkg-workspace/scripts


    - name: Run munkipkg 🧙‍♂️📦
      id: munkipkg
      uses: joncrain/munkipkg-action@5a6c2008ded522b67396a78c06983e614cbe22ac
      with:
        pkg_dir: "munki-pkg-workspace"
    
    # - name: 🏗️ Build Pkg file
    #   run: |
    #     python munki-pkg-workspace/munkipkg munki-pkg-workspace/vfo_macOS_installer

    - name: 💭 Cache .pkg
      uses: actions/cache@v3.2.2
      id: macos-pkg
      with:
        files: ${{ steps.munkipkg.outputs.filepath }}
        tag_name: ${{ steps.munkipkg.outputs.tag }}
        key: ${{ github.sha }}




  # linux-pkg:
  #   name: Setup Linux .pkg
  #   needs: [linux-build]

  # windows-pkg:
  #   name: Setup Windows .pkg
  #   needs: [linux-build]

  release:
    name: 📦 Release
    needs: [apple-pkg] 
    # linux-pkg, windows-pkg
    runs-on: macos-latest

    steps:
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v3.3.0

    - name: 🤌💭 fetch Application Cache
      uses: actions/cache@v3.2.2
      id: vfo-build
      with:
        path: |
            ./bin/vfo
            ./src/vfo_config.conf
        key: ${{ github.sha }}

    - name: 🫳 Position application to static build folder
      run: |
        mkdir static_build
        cp bin/vfo static_build
        cp src/vfo_config.conf static_build

    - name: 💁‍♂️ Generate static_build/README.txt
      run: |
        touch static_build/README.txt
        echo -e "Place vfo & vfo_config.conf into your PATH" > static_build/README.txt

    - name: 🤐 Zip static_build folder
      run: zip -r static_build.zip static_build

    - name: 🤌💭 fetch macOS .pkg Cache
      uses: actions/cache@v3.2.2
      id: macos-pkg
      with:
        path: munki-pkg-workspace/vfo_macOS_installer/build/*
        key: ${{ github.sha }}
  
    - name: 👷📦 Release static builds & macOS pkg
      uses: softprops/action-gh-release@v0.1.15
#       if: startsWith(github.ref, 'refs/tags/')
      with:
        generate_release_notes: true
        body_path: RELEASE.txt
        files: ${{ steps.munkipkg.outputs.filepath }}
        tag_name: ${{ steps.munkipkg.outputs.tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
